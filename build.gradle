buildscript {
  repositories {
    mavenCentral()
    google()
    maven { url 'https://s01.oss.sonatype.org' }
    maven { url 'https://jitpack.io' }
    mavenLocal()
    gradlePluginPortal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
  }
  dependencies {
    classpath "com.android.tools.build:gradle:$androidPluginVersion"
    classpath "com.diffplug.spotless:spotless-plugin-gradle:$spotlessPluginVersion"

    // This follows advice from https://blog.gradle.org/log4j-vulnerability
    constraints {
      classpath("org.apache.logging.log4j:log4j-core") {
        version {
          strictly("[2.17, 3[")
          prefer("2.17.0")
        }
        because("CVE-2021-44228, CVE-2021-45046, CVE-2021-45105: Log4j vulnerable to remote code execution and other critical security vulnerabilities")
      }
    }
  }
}

configure(allprojects
    - [ project('game0001') , project('game0002') , project('game0003') ]) {
// allprojects{
  apply plugin: 'idea'
  apply plugin: 'eclipse'

  // afterEvaluate {
	// 	eclipse {
	// 		project {
	// 			//hide gradle build folders from eclipse
	// 			resourceFilter {
	// 				appliesTo = 'FOLDERS'
	// 				type = 'EXCLUDE_ALL'
	// 				matcher {
	// 					id = 'org.eclipse.ui.ide.multiFilter'
	// 					arguments = '1.0-projectRelativePath-matches-true-false-build'
	// 				}
	// 			}
	// 		}
	// 		// jdt {
	// 		// 	file {
	// 		// 		withProperties { properties ->
	// 		// 			def libgdxJdtProperties = new Properties()
	// 		// 			libgdxJdtProperties.load(new FileInputStream(".settings/org.eclipse.jdt.libgdx.prefs"))
	// 		// 			properties.putAll(libgdxJdtProperties)
	// 		// 		}
	// 		// 	}
	// 		// }
	// 		// classpath.file {
	// 		// 	whenMerged { classpath ->
	// 		// 		classpath.entries.findAll { entry -> entry.kind == 'lib' || entry.kind == 'src' }*.exported = true
	// 		// 	}
	// 		// }
	// 	}
	// 	//Set all projects to use UTF-8 file encoding for all files
	// 	// eclipseJdt.doLast {
	// 	// 	File f = new File(projectDir, '.settings/org.eclipse.core.resources.prefs')
	// 	// 	f.write('eclipse.preferences.version=1\n')
	// 	// 	f.append('encoding/<project>=UTF-8')
	// 	// }
	// }
}

configure(subprojects 
    - [ project('game0001:0001-android') , project('game0001:0001-pico4') , project('game0001:0001-taptap') ]
    - [ project('game0002:0002-android') ]
    - [ project('game0003:0003-android') ]) {

  apply plugin: "java"
  apply plugin: 'java-library'
  sourceCompatibility = 17
  compileJava {
    options.incremental = true
    options.encoding = 'UTF-8'
  }

  sourceSets {
    main {
      java {
        srcDirs = ['src/main/java']
      }
      resources {
        srcDirs = ['src/main/resources']
      }
    }
  }

  dependencies {
    // This follows advice from https://blog.gradle.org/log4j-vulnerability
    constraints {
      implementation("org.apache.logging.log4j:log4j-core") {
        version {
          strictly("[2.17, 3[")
          prefer("2.17.0")
        }
        because("CVE-2021-44228, CVE-2021-45046, CVE-2021-45105: Log4j vulnerable to remote code execution and other critical security vulnerabilities")
      }
    }
  }
  
  apply plugin: "com.diffplug.spotless"

  spotless {
    lineEndings 'UNIX'

    java {
      target '**/*.java'
      removeUnusedImports()
      eclipse().configFile new File(rootProject.projectDir.absolutePath, 'doc/eclipse.formatter.xml')
    }
    groovyGradle {
      target '*.gradle'
      greclipse().configFile new File(rootProject.projectDir.absolutePath, 'doc/eclipse.formatter.xml')
    }
  }

}

subprojects {
  version = '0.0.1'
  ext.appName = 'game'
  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    mavenLocal()
    gradlePluginPortal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }
  }

  tasks.withType(Copy).all { duplicatesStrategy = DuplicatesStrategy.EXCLUDE }

  tasks.withType(Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    //  manifest {
    //     attributes["Main-Class"] = "com.example.backendapp.BackendAppApplication"
    //  }
  }

  tasks.withType(Tar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
  }

  tasks.withType(Zip) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
  }

  // tasks.getByName('distTar') { duplicatesStrategy = DuplicatesStrategy.EXCLUDE }
}

eclipse.project.name = 'game' + '-parent'